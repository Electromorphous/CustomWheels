{"version":3,"sources":["components/Loader.jsx","components/Model.jsx","App.js","index.js"],"names":["loaderStyle","position","top","left","right","bottom","background","color","fontSize","zIndex","Loader","style","className","Model","props","useGLTF","scene","nodes","materials","useLayoutEffect","traverse","obj","type","receiveShadow","castShadow","Object","assign","wheel003_020_2_Chrome_0","material","metalness","roughness","THREE","WhiteCar","envMapIntensity","object","App","fallback","height","shadows","camera","fov","resize","scroll","debounce","attach","args","PerspectiveCamera","makeDefault","OrbitControls","target","minPolarAngle","Math","PI","maxPolarAngle","maxDistance","minDistance","enablePan","rotateSpeed","Stage","environment","intensity","contactShadow","shadowBias","scale","rotation","MeshReflectorMaterial","blur","resolution","mixBlur","mixStrength","depthScale","minDepthThreshold","maxDepthThreshold","ReactDOM","render","document","getElementById"],"mappings":"qOAEMA,EAAc,CAClBC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,WAAY,QACZC,MAAO,QACPC,SAAU,OACVC,OAAQ,KAgBKC,MAbf,WACE,OACE,qBAAKC,MAAOX,EAAZ,SACE,qBAAKY,UAAU,qCAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,UACf,qBAAKA,UAAU,kB,uBCWVC,MA1Bf,SAAeC,GACb,MAAoCC,YAClC,4DADMC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,UAsBtB,OAlBAC,2BAAgB,WACdH,EAAMI,UACJ,SAACC,GAAD,MACe,SAAbA,EAAIC,OAAoBD,EAAIE,cAAgBF,EAAIG,YAAa,MAEjEC,OAAOC,OAAOT,EAAMU,wBAAwBC,SAAU,CACpDC,UAAW,EACXC,UAAW,GACXvB,MAAO,IAAIwB,QAAY,UAEzBN,OAAOC,OAAOR,EAAUc,SAAU,CAChCH,UAAW,EACXC,UAAW,EAEXvB,MAAO,IAAIwB,QAAY,QACvBE,gBAAiB,OAElB,CAACjB,EAAOC,EAAOC,IACX,uCAAWgB,OAAQlB,GAAWF,KCfxB,SAASqB,IACtB,OACE,cAAC,WAAD,CAAUC,SAAU,cAAC,EAAD,IAApB,SACE,eAAC,IAAD,CACEzB,MAAO,CAAE0B,OAAQ,QACjBC,SAAO,EACPC,OAAQ,CAAEC,IAAK,IACfC,OAAQ,CAAEC,QAAQ,EAAMC,SAAU,CAAED,OAAQ,GAAID,OAAQ,IAJ1D,UAME,uBAAOG,OAAO,aAAaC,KAAM,CAAC,UAIlC,cAACC,EAAA,EAAD,CAAmBC,aAAW,IAC9B,cAACC,EAAA,EAAD,CACEC,OAAQ,CAAC,EAAG,IAAM,GAClBC,cAAeC,KAAKC,GAAK,EACzBC,cAAeF,KAAKC,GAAK,IACzBE,YAAa,IACbC,YAAa,GACbC,WAAW,EACXC,YAAa,MAGf,cAACC,EAAA,EAAD,CACEC,YAAa,KACbC,UAAW,GACXC,eAAe,EACfC,YAAa,KAJf,SAME,cAAC,EAAD,CAAOC,MAAO,SAGhB,uBAAMC,SAAU,EAAEb,KAAKC,GAAK,EAAG,EAAG,GAAInD,SAAU,CAAC,EAAG,KAAO,GAA3D,UACE,+BAAe4C,KAAM,CAAC,IAAK,OAC3B,cAACoB,EAAA,EAAD,CACEC,KAAM,CAAC,GAAI,IACXC,WAAY,KACZC,QAAS,EACTC,YAAa,GACbvC,UAAW,IACXwC,WAAY,EACZC,kBAAmB,GACnBC,kBAAmB,IACnBjE,MAAM,UACNsB,UAAW,YCrDvB4C,IAASC,OAAO,cAACvC,EAAD,IAASwC,SAASC,eAAe,W","file":"static/js/main.f6c70e99.chunk.js","sourcesContent":["import React from \"react\";\n\nconst loaderStyle = {\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  background: \"black\",\n  color: \"white\",\n  fontSize: \"2rem\",\n  zIndex: 100,\n};\n\nfunction Loader() {\n  return (\n    <div style={loaderStyle}>\n      <div className=\"loader-container arc-rotate-double\">\n        <div className=\"loader\">\n          <div className=\"arc-1\"></div>\n          <div className=\"arc-2\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Loader;\n","import { useMemo, useLayoutEffect, useRef, useState, useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { useGLTF } from \"@react-three/drei\";\n\nfunction Model(props) {\n  const { scene, nodes, materials } = useGLTF(\n    \"https://electromorphous.github.io/CustomWheels/lambo.glb\"\n  );\n\n  useLayoutEffect(() => {\n    scene.traverse(\n      (obj) =>\n        obj.type === \"Mesh\" && (obj.receiveShadow = obj.castShadow = true)\n    );\n    Object.assign(nodes.wheel003_020_2_Chrome_0.material, {\n      metalness: 0,\n      roughness: 0.4,\n      color: new THREE.Color(\"#222\"),\n    });\n    Object.assign(materials.WhiteCar, {\n      metalness: 0,\n      roughness: 1,\n      // emissive: new THREE.Color(\"#000000\"),\n      color: new THREE.Color(\"#777\"),\n      envMapIntensity: 0.5,\n    });\n  }, [scene, nodes, materials]);\n  return <primitive object={scene} {...props} />;\n}\n\nexport default Model;\n","import { Suspense, useState, useEffect, useLayoutEffect, useRef } from \"react\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport {\n  MeshReflectorMaterial,\n  Environment,\n  Stage,\n  PresentationControls,\n  PerspectiveCamera,\n  OrbitControls,\n} from \"@react-three/drei\";\nimport Loader from \"./components/Loader\";\nimport Model from \"./components/Model\";\n\nexport default function App() {\n  return (\n    <Suspense fallback={<Loader />}>\n      <Canvas\n        style={{ height: \"100%\" }}\n        shadows\n        camera={{ fov: 31 }}\n        resize={{ scroll: true, debounce: { scroll: 50, resize: 0 } }}\n      >\n        <color attach=\"background\" args={[\"#000\"]} />\n        {/* <fog attach=\"fog\" args={[\"#fff\", 10, 200]} /> */}\n        {/* <Environment path=\"https://electromorphous.github.io/CustomWheels/Environments/cube\" /> */}\n\n        <PerspectiveCamera makeDefault />\n        <OrbitControls\n          target={[0, 0.05, 0]}\n          minPolarAngle={Math.PI / 8}\n          maxPolarAngle={Math.PI / 2.2}\n          maxDistance={0.75}\n          minDistance={0.4}\n          enablePan={false}\n          rotateSpeed={0.69}\n        />\n\n        <Stage\n          environment={null}\n          intensity={0.7}\n          contactShadow={false}\n          shadowBias={-0.015}\n        >\n          <Model scale={0.001} />\n        </Stage>\n\n        <mesh rotation={[-Math.PI / 2, 0, 0]} position={[0, 0.001, 0]}>\n          <planeGeometry args={[500, 500]} />\n          <MeshReflectorMaterial\n            blur={[30, 20]}\n            resolution={1024}\n            mixBlur={1}\n            mixStrength={50}\n            roughness={0.75}\n            depthScale={0}\n            minDepthThreshold={0.4}\n            maxDepthThreshold={1.4}\n            color=\"#101010\"\n            metalness={0}\n          />\n        </mesh>\n\n        {/* <ambientLight args={[\"#fff\", 1]} /> */}\n      </Canvas>\n    </Suspense>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport \"./Sass/index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}