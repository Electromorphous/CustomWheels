{"version":3,"sources":["components/Loader.jsx","App.js","index.js"],"names":["loaderStyle","position","top","left","right","bottom","background","color","fontSize","zIndex","Loader","style","class","Model","props","useGLTF","scene","nodes","materials","useLayoutEffect","traverse","obj","type","receiveShadow","castShadow","Object","assign","wheel003_020_2_Chrome_0","material","metalness","roughness","THREE","WhiteCar","envMapIntensity","object","App","useState","offset","setOffset","useEffect","onScroll","window","pageYOffset","removeEventListener","addEventListener","passive","console","log","fallback","shadows","camera","fov","resize","scroll","debounce","attach","args","PresentationControls","speed","global","zoom","rotation","Math","PI","polar","Stage","environment","intensity","contactShadow","shadowBias","scale","MeshReflectorMaterial","blur","resolution","mixBlur","mixStrength","depthScale","minDepthThreshold","maxDepthThreshold","ReactDOM","render","document","getElementById"],"mappings":"2PAEMA,EAAc,CAClBC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,WAAY,QACZC,MAAO,QACPC,SAAU,OACVC,OAAQ,KAgBKC,MAbf,WACE,OACE,qBAAKC,MAAOX,EAAZ,SACE,qBAAKY,MAAM,qCAAX,SACE,sBAAKA,MAAM,SAAX,UACE,qBAAKA,MAAM,UACX,qBAAKA,MAAM,kBCRrB,SAASC,EAAMC,GACb,MAAoCC,YAClC,4DADMC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,UAwBtB,OAlBAC,2BAAgB,WACdH,EAAMI,UACJ,SAACC,GAAD,MACe,SAAbA,EAAIC,OAAoBD,EAAIE,cAAgBF,EAAIG,YAAa,MAEjEC,OAAOC,OAAOT,EAAMU,wBAAwBC,SAAU,CACpDC,UAAW,EACXC,UAAW,GACXvB,MAAO,IAAIwB,QAAY,UAEzBN,OAAOC,OAAOR,EAAUc,SAAU,CAChCF,UAAW,EACXD,UAAW,EAEXtB,MAAO,IAAIwB,QAAY,QACvBE,gBAAiB,OAElB,CAACjB,EAAOC,EAAOC,IACX,uCAAWgB,OAAQlB,GAAWF,IAGxB,SAASqB,IACtB,MAA4BC,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAaA,OAXAC,qBAAU,WACR,IAAMC,EAAW,kBAAMF,EAAUG,OAAOC,cAKxC,OAFAD,OAAOE,oBAAoB,SAAUH,GACrCC,OAAOG,iBAAiB,SAAUJ,EAAU,CAAEK,SAAS,IAChD,kBAAMJ,OAAOE,oBAAoB,SAAUH,MACjD,IAEHM,QAAQC,IAAIV,GAGV,cAAC,WAAD,CAAUW,SAAU,cAAC,EAAD,IAApB,SACE,eAAC,IAAD,CACEC,SAAO,EACPC,OAAQ,CAAEC,IAAK,IACfC,OAAQ,CAAEC,QAAQ,EAAMC,SAAU,CAAED,OAAQ,GAAID,OAAQ,IAH1D,UAKE,uBAAOG,OAAO,aAAaC,KAAM,CAAC,UAGlC,eAACC,EAAA,EAAD,CACEC,MAAO,IACPC,QAAM,EACNC,KAAM,IACNC,SAAU,EAAEC,KAAKC,GAAK,IAAKD,KAAKC,GAAK,EAAG,GACxCC,MAAO,CAAC,EAAGF,KAAKC,GAAK,KALvB,UAOE,cAACE,EAAA,EAAD,CACEC,YAAa,KACbC,UAAW,IACXC,eAAe,EACfC,YAAa,KAJf,SAME,cAACxD,EAAD,CAAOyD,MAAO,QAGhB,uBAAMT,SAAU,EAAEC,KAAKC,GAAK,EAAG,EAAG,GAAlC,UACE,+BAAeP,KAAM,CAAC,IAAK,OAC3B,cAACe,EAAA,EAAD,CACEC,KAAM,CAAC,GAAI,IACXC,WAAY,KACZC,QAAS,EACTC,YAAa,GACb7C,UAAW,IACX8C,WAAY,EACZC,kBAAmB,GACnBC,kBAAmB,IACnBvE,MAAM,UACNsB,UAAW,eCvFzBkD,IAASC,OAAO,cAAC7C,EAAD,IAAS8C,SAASC,eAAe,W","file":"static/js/main.705d7dc2.chunk.js","sourcesContent":["import React from \"react\";\n\nconst loaderStyle = {\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  background: \"black\",\n  color: \"white\",\n  fontSize: \"2rem\",\n  zIndex: 100,\n};\n\nfunction Loader() {\n  return (\n    <div style={loaderStyle}>\n      <div class=\"loader-container arc-rotate-double\">\n        <div class=\"loader\">\n          <div class=\"arc-1\"></div>\n          <div class=\"arc-2\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Loader;\n","import * as THREE from \"three\";\nimport { Suspense, useLayoutEffect, useState, useEffect } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport {\n  useGLTF,\n  MeshReflectorMaterial,\n  Environment,\n  Stage,\n  PresentationControls,\n} from \"@react-three/drei\";\nimport Loader from \"./components/Loader\";\n\nfunction Model(props) {\n  const { scene, nodes, materials } = useGLTF(\n    \"https://electromorphous.github.io/CustomWheels/lambo.glb\"\n  );\n\n  // console.log(materials.WhiteCar);\n\n  useLayoutEffect(() => {\n    scene.traverse(\n      (obj) =>\n        obj.type === \"Mesh\" && (obj.receiveShadow = obj.castShadow = true)\n    );\n    Object.assign(nodes.wheel003_020_2_Chrome_0.material, {\n      metalness: 0,\n      roughness: 0.4,\n      color: new THREE.Color(\"#222\"),\n    });\n    Object.assign(materials.WhiteCar, {\n      roughness: 1,\n      metalness: 0,\n      // emissive: new THREE.Color(\"#000000\"),\n      color: new THREE.Color(\"#777\"),\n      envMapIntensity: 0.5,\n    });\n  }, [scene, nodes, materials]);\n  return <primitive object={scene} {...props} />;\n}\n\nexport default function App() {\n  const [offset, setOffset] = useState(0);\n\n  useEffect(() => {\n    const onScroll = () => setOffset(window.pageYOffset);\n\n    // clean up code\n    window.removeEventListener(\"scroll\", onScroll);\n    window.addEventListener(\"scroll\", onScroll, { passive: true });\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, []);\n\n  console.log(offset);\n\n  return (\n    <Suspense fallback={<Loader />}>\n      <Canvas\n        shadows\n        camera={{ fov: 31 }}\n        resize={{ scroll: true, debounce: { scroll: 50, resize: 0 } }}\n      >\n        <color attach=\"background\" args={[\"#000\"]} />\n        {/* <fog attach=\"fog\" args={[\"#fff\", 10, 200]} /> */}\n        {/* <Environment path=\"https://electromorphous.github.io/CustomWheels/Environments/cube\" /> */}\n        <PresentationControls\n          speed={1.7}\n          global\n          zoom={0.95}\n          rotation={[-Math.PI / 47, -Math.PI / 5, 0]}\n          polar={[0, Math.PI / 2.5]}\n        >\n          <Stage\n            environment={null}\n            intensity={0.75}\n            contactShadow={false}\n            shadowBias={-0.015}\n          >\n            <Model scale={0.01} />\n          </Stage>\n\n          <mesh rotation={[-Math.PI / 2, 0, 0]}>\n            <planeGeometry args={[500, 500]} />\n            <MeshReflectorMaterial\n              blur={[30, 20]}\n              resolution={1024}\n              mixBlur={1}\n              mixStrength={50}\n              roughness={0.75}\n              depthScale={0}\n              minDepthThreshold={0.4}\n              maxDepthThreshold={1.4}\n              color=\"#101010\"\n              metalness={0}\n            />\n          </mesh>\n        </PresentationControls>\n      </Canvas>\n    </Suspense>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport \"./Sass/index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}